<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<bean class="org.baum.app.edu.aop.AOPMain.BizBean"></bean>
	<bean class="org.baum.app.edu.aop.AOPMain.OpMonitor"></bean>


	<!-- 
		일종의 선후행 처리, Pointcut
		
		AOP(Aspect Oriented Programming) 을 정의한 클래스에 @Aspect 어노테이션을 추가하고
		메소드에는 @After-선행, @Before-후행 , @Around-함수감싸기(?) 를 추가한다.
		
		EXP는 AOP를 적용할 대상 메소들을 표현하는 AOP 표현식이다.
		http://www.egovframe.go.kr/wiki/doku.php?id=egovframework:rte:fdl:aop:aspectj
		
		Nanespaces에 aop를 추가하고 추가된 aop 탭에서 aspectj-autoproxy를 추가해야
		aop 어노테이션을 추가할 수 있다. 
	
	 -->

	<aop:aspectj-autoproxy/>
</beans>
